package me.magnum.il2mapintegrator.core.commands;

import java.util.Map;

import me.magnum.il2mapintegrator.core.entities.Response;

/**
 * Defines an executable command. A command must have a defined name which should be passes to the
 * constructor. This is the name that is used to invoke the command. When a command is to be
 * executed, the {@link #execute(Map)} method is invoked with the arguments that were supplied.
 */
public abstract class Command {
	private String command;

	/**
	 * Creates a new command with the given command name.
	 * @param command The name for this command.
	 */
	public Command(String command) {
		this.command = command;
	}

	/**
	 * Executes this command with the given set of arguments. A {@link Response} must be returned
	 * with the result of the execution. {@code null} can also be returned, meaning that there was a
	 * generic error during the execution of the command.
	 * @param args The arguments supplied to this command during the request.
	 * @return The response generated by the command.
	 */
	public abstract Response execute(Map<String, String> args);

	/**
	 * Returns the command name.
	 */
	public String getCommand() {
		return this.command;
	}
}
